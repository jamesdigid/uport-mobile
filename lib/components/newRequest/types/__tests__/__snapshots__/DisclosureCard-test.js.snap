// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DisclosureCard renders a connected DisclosureCard 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DisclosureCard
    accountAuthorized={false}
    accountProfile={null}
    accountProfileLookup={[Function]}
    authorizeAccount={[Function]}
    authorizeRequest={[Function]}
    authorized={false}
    cancelRequest={[Function]}
    clearRequest={[Function]}
    client={null}
    createSubAccount={false}
    currentIdentity={Object {}}
    ethBalance={0}
    interactionStats={
      Object {
        "shared": 0,
      }
    }
    navigator={FakeNavigator {}}
    pushError={null}
    pushPermissions={false}
    pushWorking={false}
    requested={Object {}}
    snsRegistered={false}
    uportVerified={false}
    usdBalance={0}
    verified={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "alignItems": "center",
              "flex": 0,
              "justifyContent": "center",
            }
          }
        />,
        null,
        <InteractionStats
          actionText="interacted"
          counterParty={null}
          stats={
            Object {
              "shared": 0,
            }
          }
        />,
        <Component
          style={
            Object {
              "alignItems": "stretch",
              "backgroundColor": "#F6F5FE",
              "flex": 0,
              "flexDirection": "column",
              "justifyContent": "flex-end",
            }
          }
        >
          <Component
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "paddingLeft": 16,
                  "paddingRight": 22,
                  "paddingTop": 22,
                },
                Object {
                  "marginBottom": 0,
                  "paddingBottom": 10,
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#3F3D4B",
                    "flex": 1,
                    "fontFamily": "NunitoSans-Bold",
                    "fontSize": 24,
                  },
                  Object {
                    "textAlign": "left",
                  },
                ]
              }
            >
              Login
            </Text>
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "height": 44,
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": 16,
                  "top": 16,
                  "width": 44,
                }
              }
            >
              <Icon
                color="rgba(155,155,155,1)"
                name="close"
                size={24}
              />
            </TouchableOpacity>
          </Component>
          <Component
            style={
              Object {
                "flex": 0,
                "flexDirection": "column",
              }
            }
          >
            <PrimaryButton
              disabled={false}
              onPress={[Function]}
              style={
                Object {
                  "marginBottom": 30,
                  "marginLeft": 16,
                  "marginRight": 16,
                  "marginTop": 0,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 14,
                  }
                }
              >
                 CREATE NEW ACCOUNT 
              </Text>
            </PrimaryButton>
          </Component>
        </Component>,
      ],
      "style": Object {
        "alignItems": "stretch",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": null,
          "style": Object {
            "alignItems": "center",
            "flex": 0,
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "actionText": "interacted",
          "counterParty": null,
          "stats": Object {
            "shared": 0,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Component
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "paddingLeft": 16,
                    "paddingRight": 22,
                    "paddingTop": 22,
                  },
                  Object {
                    "marginBottom": 0,
                    "paddingBottom": 10,
                  },
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#3F3D4B",
                      "flex": 1,
                      "fontFamily": "NunitoSans-Bold",
                      "fontSize": 24,
                    },
                    Object {
                      "textAlign": "left",
                    },
                  ]
                }
              >
                Login
              </Text>
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "position": "absolute",
                    "right": 16,
                    "top": 16,
                    "width": 44,
                  }
                }
              >
                <Icon
                  color="rgba(155,155,155,1)"
                  name="close"
                  size={24}
                />
              </TouchableOpacity>
            </Component>,
            <Component
              style={
                Object {
                  "flex": 0,
                  "flexDirection": "column",
                }
              }
            >
              <PrimaryButton
                disabled={false}
                onPress={[Function]}
                style={
                  Object {
                    "marginBottom": 30,
                    "marginLeft": 16,
                    "marginRight": 16,
                    "marginTop": 0,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "fontSize": 14,
                    }
                  }
                >
                   CREATE NEW ACCOUNT 
                </Text>
              </PrimaryButton>
            </Component>,
          ],
          "style": Object {
            "alignItems": "stretch",
            "backgroundColor": "#F6F5FE",
            "flex": 0,
            "flexDirection": "column",
            "justifyContent": "flex-end",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#3F3D4B",
                        "flex": 1,
                        "fontFamily": "NunitoSans-Bold",
                        "fontSize": 24,
                      },
                      Object {
                        "textAlign": "left",
                      },
                    ]
                  }
                >
                  Login
                </Text>,
                <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "height": 44,
                      "justifyContent": "center",
                      "position": "absolute",
                      "right": 16,
                      "top": 16,
                      "width": 44,
                    }
                  }
                >
                  <Icon
                    color="rgba(155,155,155,1)"
                    name="close"
                    size={24}
                  />
                </TouchableOpacity>,
              ],
              "style": Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "paddingLeft": 16,
                  "paddingRight": 22,
                  "paddingTop": 22,
                },
                Object {
                  "marginBottom": 0,
                  "paddingBottom": 10,
                },
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": "Login",
                  "ellipsizeMode": "tail",
                  "style": Array [
                    Object {
                      "color": "#3F3D4B",
                      "flex": 1,
                      "fontFamily": "NunitoSans-Bold",
                      "fontSize": 24,
                    },
                    Object {
                      "textAlign": "left",
                    },
                  ],
                },
                "ref": null,
                "rendered": "Login",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.2,
                  "children": <Icon
                    color="rgba(155,155,155,1)"
                    name="close"
                    size={24}
                  />,
                  "onPress": [Function],
                  "style": Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "position": "absolute",
                    "right": 16,
                    "top": 16,
                    "width": 44,
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "color": "rgba(155,155,155,1)",
                    "name": "close",
                    "size": 24,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                null,
                null,
                null,
                null,
                null,
                null,
                <PrimaryButton
                  disabled={false}
                  onPress={[Function]}
                  style={
                    Object {
                      "marginBottom": 30,
                      "marginLeft": 16,
                      "marginRight": 16,
                      "marginTop": 0,
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "fontSize": 14,
                      }
                    }
                  >
                     CREATE NEW ACCOUNT 
                  </Text>
                </PrimaryButton>,
                null,
              ],
              "style": Object {
                "flex": 0,
                "flexDirection": "column",
              },
            },
            "ref": null,
            "rendered": Array [
              null,
              null,
              null,
              null,
              null,
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "fontSize": 14,
                      }
                    }
                  >
                     CREATE NEW ACCOUNT 
                  </Text>,
                  "disabled": false,
                  "onPress": [Function],
                  "style": Object {
                    "marginBottom": 30,
                    "marginLeft": 16,
                    "marginRight": 16,
                    "marginTop": 0,
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "accessible": true,
                    "allowFontScaling": true,
                    "children": " CREATE NEW ACCOUNT ",
                    "ellipsizeMode": "tail",
                    "style": Object {
                      "fontSize": 14,
                    },
                  },
                  "ref": null,
                  "rendered": " CREATE NEW ACCOUNT ",
                  "type": [Function],
                },
                "type": [Function],
              },
              null,
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "alignItems": "center",
                "flex": 0,
                "justifyContent": "center",
              }
            }
          />,
          null,
          <InteractionStats
            actionText="interacted"
            counterParty={null}
            stats={
              Object {
                "shared": 0,
              }
            }
          />,
          <Component
            style={
              Object {
                "alignItems": "stretch",
                "backgroundColor": "#F6F5FE",
                "flex": 0,
                "flexDirection": "column",
                "justifyContent": "flex-end",
              }
            }
          >
            <Component
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "paddingLeft": 16,
                    "paddingRight": 22,
                    "paddingTop": 22,
                  },
                  Object {
                    "marginBottom": 0,
                    "paddingBottom": 10,
                  },
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#3F3D4B",
                      "flex": 1,
                      "fontFamily": "NunitoSans-Bold",
                      "fontSize": 24,
                    },
                    Object {
                      "textAlign": "left",
                    },
                  ]
                }
              >
                Login
              </Text>
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "position": "absolute",
                    "right": 16,
                    "top": 16,
                    "width": 44,
                  }
                }
              >
                <Icon
                  color="rgba(155,155,155,1)"
                  name="close"
                  size={24}
                />
              </TouchableOpacity>
            </Component>
            <Component
              style={
                Object {
                  "flex": 0,
                  "flexDirection": "column",
                }
              }
            >
              <PrimaryButton
                disabled={false}
                onPress={[Function]}
                style={
                  Object {
                    "marginBottom": 30,
                    "marginLeft": 16,
                    "marginRight": 16,
                    "marginTop": 0,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "fontSize": 14,
                    }
                  }
                >
                   CREATE NEW ACCOUNT 
                </Text>
              </PrimaryButton>
            </Component>
          </Component>,
        ],
        "style": Object {
          "alignItems": "stretch",
          "flex": 0,
          "flexDirection": "column",
          "justifyContent": "flex-end",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": null,
            "style": Object {
              "alignItems": "center",
              "flex": 0,
              "justifyContent": "center",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "actionText": "interacted",
            "counterParty": null,
            "stats": Object {
              "shared": 0,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "flex-start",
                      "paddingLeft": 16,
                      "paddingRight": 22,
                      "paddingTop": 22,
                    },
                    Object {
                      "marginBottom": 0,
                      "paddingBottom": 10,
                    },
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#3F3D4B",
                        "flex": 1,
                        "fontFamily": "NunitoSans-Bold",
                        "fontSize": 24,
                      },
                      Object {
                        "textAlign": "left",
                      },
                    ]
                  }
                >
                  Login
                </Text>
                <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "height": 44,
                      "justifyContent": "center",
                      "position": "absolute",
                      "right": 16,
                      "top": 16,
                      "width": 44,
                    }
                  }
                >
                  <Icon
                    color="rgba(155,155,155,1)"
                    name="close"
                    size={24}
                  />
                </TouchableOpacity>
              </Component>,
              <Component
                style={
                  Object {
                    "flex": 0,
                    "flexDirection": "column",
                  }
                }
              >
                <PrimaryButton
                  disabled={false}
                  onPress={[Function]}
                  style={
                    Object {
                      "marginBottom": 30,
                      "marginLeft": 16,
                      "marginRight": 16,
                      "marginTop": 0,
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "fontSize": 14,
                      }
                    }
                  >
                     CREATE NEW ACCOUNT 
                  </Text>
                </PrimaryButton>
              </Component>,
            ],
            "style": Object {
              "alignItems": "stretch",
              "backgroundColor": "#F6F5FE",
              "flex": 0,
              "flexDirection": "column",
              "justifyContent": "flex-end",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "#3F3D4B",
                          "flex": 1,
                          "fontFamily": "NunitoSans-Bold",
                          "fontSize": 24,
                        },
                        Object {
                          "textAlign": "left",
                        },
                      ]
                    }
                  >
                    Login
                  </Text>,
                  <TouchableOpacity
                    activeOpacity={0.2}
                    onPress={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "height": 44,
                        "justifyContent": "center",
                        "position": "absolute",
                        "right": 16,
                        "top": 16,
                        "width": 44,
                      }
                    }
                  >
                    <Icon
                      color="rgba(155,155,155,1)"
                      name="close"
                      size={24}
                    />
                  </TouchableOpacity>,
                ],
                "style": Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "paddingLeft": 16,
                    "paddingRight": 22,
                    "paddingTop": 22,
                  },
                  Object {
                    "marginBottom": 0,
                    "paddingBottom": 10,
                  },
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "accessible": true,
                    "allowFontScaling": true,
                    "children": "Login",
                    "ellipsizeMode": "tail",
                    "style": Array [
                      Object {
                        "color": "#3F3D4B",
                        "flex": 1,
                        "fontFamily": "NunitoSans-Bold",
                        "fontSize": 24,
                      },
                      Object {
                        "textAlign": "left",
                      },
                    ],
                  },
                  "ref": null,
                  "rendered": "Login",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activeOpacity": 0.2,
                    "children": <Icon
                      color="rgba(155,155,155,1)"
                      name="close"
                      size={24}
                    />,
                    "onPress": [Function],
                    "style": Object {
                      "alignItems": "center",
                      "height": 44,
                      "justifyContent": "center",
                      "position": "absolute",
                      "right": 16,
                      "top": 16,
                      "width": 44,
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "color": "rgba(155,155,155,1)",
                      "name": "close",
                      "size": 24,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  <PrimaryButton
                    disabled={false}
                    onPress={[Function]}
                    style={
                      Object {
                        "marginBottom": 30,
                        "marginLeft": 16,
                        "marginRight": 16,
                        "marginTop": 0,
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Object {
                          "fontSize": 14,
                        }
                      }
                    >
                       CREATE NEW ACCOUNT 
                    </Text>
                  </PrimaryButton>,
                  null,
                ],
                "style": Object {
                  "flex": 0,
                  "flexDirection": "column",
                },
              },
              "ref": null,
              "rendered": Array [
                null,
                null,
                null,
                null,
                null,
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Object {
                          "fontSize": 14,
                        }
                      }
                    >
                       CREATE NEW ACCOUNT 
                    </Text>,
                    "disabled": false,
                    "onPress": [Function],
                    "style": Object {
                      "marginBottom": 30,
                      "marginLeft": 16,
                      "marginRight": 16,
                      "marginTop": 0,
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "accessible": true,
                      "allowFontScaling": true,
                      "children": " CREATE NEW ACCOUNT ",
                      "ellipsizeMode": "tail",
                      "style": Object {
                        "fontSize": 14,
                      },
                    },
                    "ref": null,
                    "rendered": " CREATE NEW ACCOUNT ",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                null,
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;

exports[`DisclosureCard renders correctly with a full disclosure request 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard renders correctly with a full disclosure request and client info 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard renders correctly with a full disclosure request and verifiedClaims 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard renders correctly with a full disclosure request with pushPermissions request and push being registered 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard renders correctly with a full disclosure request with pushPermissions request and sns enabled 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard renders correctly with a full disclosure request with pushPermissions request and sns not enabled 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard renders correctly with a segregated account request and client info 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard renders correctly with a simple request and client info 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard renders correctly with error 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(155,155,155,1)",
              "fontFamily": "NunitoSans-Light",
              "fontSize": 14,
              "lineHeight": 19,
              "textAlign": "center",
            },
            Object {
              "color": "red",
            },
          ]
        }
      >
        JWT has Expired
      </Text>
    </View>
  </View>
</View>
`;

exports[`DisclosureCard unpublished identity renders correctly after publishing identity to registry failed 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard unpublished identity renders correctly with identity not yet published to registry 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard with network with no existing account for network renders correctly with a simple request 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard with network with no existing segregated account for client renders correctly with a simple request 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;

exports[`DisclosureCard with network with pre-existing account renders correctly with a simple request 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "flex": 0,
      "flexDirection": "column",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 0,
        "justifyContent": "center",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(138,155,161,1.0)",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 13,
            },
            Object {
              "color": "rgba(138,155,161,1.0)",
            },
          ]
        }
      >
        You've 
        interacted
         with 
        Coinbase
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "rgba(138,155,161,1.0)",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 13,
              },
              Object {
                "color": "rgba(138,155,161,1.0)",
              },
            ]
          }
        >
           once 
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "backgroundColor": "#F6F5FE",
        "flex": 0,
        "flexDirection": "column",
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 16,
            "paddingRight": 22,
            "paddingTop": 22,
          },
          Object {
            "marginBottom": 0,
            "paddingBottom": 10,
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#3F3D4B",
              "flex": 1,
              "fontFamily": "NunitoSans-Bold",
              "fontSize": 24,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Login
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 44,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": 16,
            "top": 16,
            "width": 44,
          }
        }
      >
        <Icon
          color="rgba(155,155,155,1)"
          name="close"
          size={24}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0,
          "flexDirection": "column",
        }
      }
    />
  </View>
</View>
`;
